services:
  db:
    image: pgvector/pgvector:pg16
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_local_pw}
      POSTGRES_DB: wine_db
      TZ: Europe/Helsinki
    ports:
      - "127.0.0.1:${DB_PORT:-15432}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d wine_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  adminer:
    image: adminer:4
    restart: unless-stopped
    ports:
      - "127.0.0.1:${ADMINER_PORT:-18080}:8080"
    depends_on:
      db:
        condition: service_healthy

  api:
    build: .
    restart: unless-stopped
    environment:
      - PGHOST=db
      - PGPORT=5432
      - PGUSER=postgres
      - PGPASSWORD=${POSTGRES_PASSWORD:-dev_local_pw}
      - PGDATABASE=wine_db
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=8000
      - API_KEY=${API_KEY:-mytestkey}
      - APP_VERSION=${APP_VERSION:-0.3.0}
      - CORS_ORIGINS=${CORS_ORIGINS:-*}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    ports:
      - "127.0.0.1:${FLASK_PORT:-18000}:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  db_data:
